default namespace = "urn:jboss:domain:threads:1.1"
namespace ns1 = "urn:jboss:domain:jca:1.1"

start =
  (notAllowed
   | element subsystem {
       (element thread-factory {
          attribute priority {
            xsd:integer { minInclusive = "1" maxInclusive = "10" }
          }?,
          attribute thread-name-pattern { xsd:string }?,
          attribute group-name { xsd:string }?,
          attribute name { xsd:string }
        }
        | element unbounded-queue-thread-pool {
            attribute name { xsd:string },
            (element max-threads { countType }
             & element keepalive-time { time }?
             & element thread-factory { ref }?)
          }
        | element bounded-queue-thread-pool {
            attribute blocking { xsd:boolean }?,
            attribute allow-core-timeout { xsd:boolean }?,
            attribute name { xsd:string },
            (element core-threads { countType }?
             & element queue-length { countType }
             & element max-threads { countType }
             & element keepalive-time { time }?
             & element thread-factory { ref }?
             & element handoff-executor { ref }?)
          }
        | element blocking-bounded-queue-thread-pool {
            attribute allow-core-timeout { xsd:boolean }?,
            attribute name { xsd:string },
            (element core-threads { countType }?
             & element queue-length { countType }
             & element max-threads { countType }
             & element keepalive-time { time }?
             & element thread-factory { ref }?)
          }
        | element queueless-thread-pool {
            attribute name { xsd:string },
            (element max-threads { countType }
             & element keepalive-time { time }?
             & element thread-factory { ref }?
             & element handoff-executor { ref }?)
          }
        | element blocking-queueless-thread-pool {
            attribute name { xsd:string },
            (element max-threads { countType }
             & element keepalive-time { time }?
             & element thread-factory { ref }?)
          }
        | element scheduled-thread-pool {
            attribute name { xsd:string },
            (element max-threads { countType }
             & element keepalive-time { time }?
             & element thread-factory { ref }?)
          })*
     })
  | (notAllowed
     | element ns1:subsystem {
         element ns1:archive-validation {
           attribute fail-on-warn { xsd:boolean }?,
           attribute fail-on-error { xsd:boolean }?,
           attribute enabled { xsd:boolean }?
         }?,
         element ns1:bean-validation {
           attribute enabled { xsd:boolean }
         }?,
         element ns1:default-workmanager { workmanagerType },
         element ns1:workmanager { workmanagerType }*,
         element ns1:bootstrap-contexts {
           element ns1:bootstrap-context {
             attribute workmanager { xsd:token },
             attribute name { xsd:token }
           }+
         }?,
         element ns1:cached-connection-manager {
           attribute error { xsd:boolean }?,
           attribute debug { xsd:boolean }?
         }?
       })
workmanagerType =
  (attribute name { xsd:token }?,
   ((notAllowed
     | element ns1:short-running-threads { thread-pool })
    & (notAllowed
       | element ns1:long-running-threads { thread-pool })?)),
  empty
thread-pool =
  (attribute allow-core-timeout { xsd:boolean }?,
   ((notAllowed
     | element ns1:core-threads { countType })?
    & (notAllowed
       | element ns1:queue-length { countType })
    & (notAllowed
       | element ns1:max-threads { countType })
    & (notAllowed
       | element ns1:keepalive-time { time })?
    & (notAllowed
       | element ns1:thread-factory { ref })?)),
  empty
ref =
  attribute name { xsd:string },
  empty
time =
  (attribute unit {
     xsd:token "minutes"
     | xsd:token "days"
     | xsd:token "seconds"
     | xsd:token "hours"
     | xsd:token "nanoseconds"
     | xsd:token "milliseconds"
   },
   attribute time { xsd:long }),
  empty
countType =
  attribute count { xsd:int },
  empty
